// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String        @id @default(cuid())
  name                String?                                 // By nextAuth
  firstName           String?
  lastName            String?
  email               String?       @unique
  emailVerified       DateTime?                               // By nextAuth
  image               String?                                 // By nextAuth
  telefon             String?
  newsletter          Boolean?      @default(false)
  newsletterProperty  Boolean?      @default(false)
  welcomeStatus       Boolean?      @default(false)           // welcome banner indikator
  agbAccepted         DateTime?
  personalCode        String?                                 // AuthCode used to connect registed Buildings to user
  public              Boolean       @default(false)           // Public User used by Organizations
  verified            Boolean       @default(false)
  isAdmin             Boolean?      @default(false)           // Admin Access to Admin Panel and Privilages
  createdAt           DateTime      @default(now()) 
  updatedAt           DateTime      @default(now()) @updatedAt
  password            String? 

  // User Postal Address
  street              String?
  streetNumber        String?
  city                String?    
  postcode            String?
  region              String?
  country             String?

  accounts            Account[]                               // NextAuth 1:N Link to Accounts
  sessions            Session[]                               // NextAuth 1:N Link to Sessions
}

model Account {
  id                  String        @id @default(cuid())
  userId              String
  type                String
  provider            String
  providerAccountId   String
  refresh_token       String?
  access_token        String?
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String?
  session_state       String?
  oauth_token_secret  String?
  oauth_token         String?

  user User @relation(fields: [userId], references: [id])
  @@unique([provider, providerAccountId])
}

model Session {
  id                  String        @id @default(cuid())
  sessionToken        String        @unique
  userId              String
  expires             DateTime
  user                User          @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier          String
  token               String        @unique
  expires             DateTime

  @@unique([identifier, token])
}